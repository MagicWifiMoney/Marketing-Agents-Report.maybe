#!/usr/bin/env python3
"""
Quick Setup Script for Notion Integration
This script will guide you through the complete setup process
"""

import os
import sys
from pathlib import Path

def print_header():
    print("üöÄ Notion Integration Quick Setup")
    print("=" * 50)
    print()

def check_prerequisites():
    """Check if all prerequisites are met"""
    print("üìã Checking prerequisites...")
    
    # Check if we're in the right directory
    if not Path("notion_helper.py").exists():
        print("‚ùå Please run this script from the notion-integration directory")
        return False
    
    # Check if config.env exists
    if not Path("config.env").exists():
        print("‚ùå config.env not found. Creating from template...")
        create_config_template()
    
    print("‚úÖ Prerequisites check complete")
    return True

def create_config_template():
    """Create config.env from template"""
    config_content = """# Notion Integration Environment Variables
# Generated by quick_setup.py

# Notion API Configuration
NOTION_API_KEY=your_notion_api_key_here
NOTION_PAGE_ID=your_notion_page_id_here

# Database IDs (will be populated after database creation)
NOTION_CLIENTS_DB_ID=
NOTION_REPORTS_DB_ID=
NOTION_ACTION_ITEMS_DB_ID=
NOTION_RESEARCH_DB_ID=
NOTION_CONTENT_DB_ID=
NOTION_METRICS_DB_ID=

# Optional: Enable/disable Notion sync
ENABLE_NOTION_SYNC=true
"""
    
    with open("config.env", "w") as f:
        f.write(config_content)
    
    print("‚úÖ Created config.env template")

def get_user_input():
    """Get required information from user"""
    print("\nüîë Notion API Setup")
    print("=" * 30)
    print("1. Go to https://notion.so/my-integrations")
    print("2. Create a new integration called 'Marketing Agency Subagents'")
    print("3. Copy the 'Internal Integration Token'")
    print("4. Select the workspace where you want the databases")
    print()
    
    api_key = input("Enter your Notion API key: ").strip()
    if not api_key:
        print("‚ùå API key is required")
        return None, None
    
    print("\nüìÑ Notion Page Setup")
    print("=" * 30)
    print("1. Open the Notion page where you want to create the databases")
    print("2. Copy the URL - it looks like: https://notion.so/your-workspace/Page-Title-32characterID")
    print("3. The page ID is the last part: 32characterID")
    print()
    
    page_id = input("Enter your Notion page ID: ").strip()
    if not page_id:
        print("‚ùå Page ID is required")
        return None, None
    
    return api_key, page_id

def update_config(api_key, page_id):
    """Update config.env with user input"""
    print("\nüìù Updating configuration...")
    
    # Read current config
    with open("config.env", "r") as f:
        content = f.read()
    
    # Update with user values
    content = content.replace("your_notion_api_key_here", api_key)
    content = content.replace("your_notion_page_id_here", page_id)
    
    # Write updated config
    with open("config.env", "w") as f:
        f.write(content)
    
    print("‚úÖ Configuration updated")

def create_databases():
    """Create Notion databases"""
    print("\nüóÑÔ∏è Creating Notion databases...")
    
    try:
        # Set environment variables
        os.environ["NOTION_API_KEY"] = api_key
        os.environ["NOTION_PAGE_ID"] = page_id
        
        # Import and run setup
        from setup_notion import setup_notion_databases
        success = setup_notion_databases()
        
        if success:
            print("‚úÖ All databases created successfully!")
            return True
        else:
            print("‚ùå Database creation failed")
            return False
            
    except Exception as e:
        print(f"‚ùå Error creating databases: {e}")
        return False

def test_integration():
    """Test the integration"""
    print("\nüß™ Testing integration...")
    
    try:
        from test_notion_sync import test_notion_sync
        success = test_notion_sync()
        
        if success:
            print("‚úÖ Integration test successful!")
            return True
        else:
            print("‚ùå Integration test failed")
            return False
            
    except Exception as e:
        print(f"‚ùå Error testing integration: {e}")
        return False

def copy_to_main_project():
    """Copy config to main project"""
    print("\nüìÅ Copying configuration to main project...")
    
    try:
        # Copy config.env to main project as .env
        main_project = Path("..")
        target_env = main_project / ".env"
        
        with open("config.env", "r") as src:
            content = src.read()
        
        with open(target_env, "w") as dst:
            dst.write(content)
        
        print("‚úÖ Configuration copied to main project")
        return True
        
    except Exception as e:
        print(f"‚ùå Error copying configuration: {e}")
        return False

def main():
    """Main setup process"""
    print_header()
    
    # Check prerequisites
    if not check_prerequisites():
        return
    
    # Get user input
    api_key, page_id = get_user_input()
    if not api_key or not page_id:
        print("\n‚ùå Setup cancelled - missing required information")
        return
    
    # Update configuration
    update_config(api_key, page_id)
    
    # Create databases
    if not create_databases():
        print("\n‚ùå Setup failed at database creation")
        return
    
    # Test integration
    if not test_integration():
        print("\n‚ö†Ô∏è Setup completed but integration test failed")
        print("You can test manually later with: python test_notion_sync.py")
    
    # Copy to main project
    copy_to_main_project()
    
    # Final instructions
    print("\nüéâ Setup Complete!")
    print("=" * 30)
    print("Your Notion integration is ready to use!")
    print()
    print("Next steps:")
    print("1. Start your web app: cd ../report-generator/web && python app.py")
    print("2. Check 'Save to Notion Database' when generating reports")
    print("3. View your organized data in Notion")
    print()
    print("Your databases are now available in Notion with:")
    print("‚Ä¢ Clients - Master client information")
    print("‚Ä¢ Reports & Audits - All generated reports")
    print("‚Ä¢ Action Items & Tasks - Trackable tasks")
    print("‚Ä¢ Research & Market Insights - Market research")
    print("‚Ä¢ Content & Creative Assets - Content library")
    print("‚Ä¢ Performance Metrics & KPIs - Performance tracking")

if __name__ == "__main__":
    main()
